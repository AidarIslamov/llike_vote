version: '3.8'

services:
  # Database
  postgres:
    image: postgres:17
    container_name: logic_like_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: logic_like_backend
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    command: npm run docker:start

  # Frontend
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: logic_like_frontend
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:3000
  #   ports:
  #     - "5173:5173"  # Vite default port
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   networks:
  #     - app-network
  #   command: npm run dev

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge